@model LogiTrack.Core.ViewModels.Delivery.DeliveryStatisticsForClientViewModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Driver Dashboard</title>
    <link rel="stylesheet" href="~/css/site.css" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Roboto:wght@500&display=swap">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.8.1/font/bootstrap-icons.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="~/js/site.js"></script>
    <style>

        .card h3 {
            margin: 0;
            font-size: 1.1rem;
            color: #00aa87;
        }
        .chart-container {
            background: white;
            padding: 20px;
        }

            .chart-container h4 {
                margin-bottom: 20px;
                font-size: 1.2em;
                color: #00aa87;
                text-align: center;
            }

        .chart {
            max-width: 100%;
            height: auto;
        }

        .first-row {
            display: flex;
            width: 90%;
            margin-bottom: 50px;
            justify-content: space-between;
        }

        .second-row {
            display: flex;
            justify-content: center;
            gap: 40px;
            width: 90%;
            margin-bottom: 30px;
        }

            .second-row .chart-container {
                width: 600px;
            }

        .delay{
			display: flex;
			flex-direction: row;
			align-items: center;
        }

        .monthly-delivery-chart{
            width: 400px;
height: 400px;
        }
    </style>

</head>

<body>
    <header class="header">
        <div class="logo-name">
            <div class="company-logo">
                <img src="https://via.placeholder.com/50" alt="Company Logo">
            </div>
            <div class="company-name">LogiTrack</div>
        </div>
        <div class="profile-dropdown">
            <button onclick="toggleDropdown()">
                <i class="bi bi-person-circle"></i>
                <span class="arrow">&#x25BC;</span>
            </button>
            <div class="profile-dropdown-menu" id="profileDropdown">
                <a asp-action="CompanyDetails" asp-controller="Clients">Company details</a>
                <a asp-action="ContactDetails" asp-controller="Clients">Contact details</a>
                <a asp-action="Logout" asp-controller="Home">Logout</a>
            </div>
        </div>
    </header>
    <aside class="sidebar">
        <ul>
            <li><a asp-action="Dashboard" asp-controller="Clients"><i class="bi bi-house-door"></i> Dashboard</a></li>
            <li>
                <a asp-action="MyRequests" asp-controller="Clients"><i class="bi bi-clipboard-check"></i> Requests <span class="arrow">></span></a>
                <div class="dropdown-menu">
                    <ul>
                        <li><a asp-action="MakeRequest" asp-controller="Clients"><i class="bi bi-plus-circle"></i> New</a></li>
                        <li><a asp-action="MyRequests" asp-controller="Clients"><i class="bi bi-search"></i> Search</a></li>
                        <li><a asp-action="RequestStatistics" asp-controller="Clients"><i class="bi bi-bar-chart"></i> Statistics</a></li>
                    </ul>
                </div>
            </li>
            <li>
                <a asp-action="MyOffers" asp-controller="Clients"><i class="bi bi-file-earmark-text"></i> Offers <span class="arrow">></span></a>
                <div class="dropdown-menu">
                    <ul>
                        <li><a asp-action="HaveOffer" asp-controller="Clients"><i class="bi bi-calendar-check"></i> Book</a></li>
                        <li><a asp-action="MyOffers" asp-controller="Clients"><i class="bi bi-search"></i> Search</a></li>
                        <li><a asp-action="OfferStatistics" asp-controller="Clients"><i class="bi bi-bar-chart"></i> Statistics</a></li>
                    </ul>
                </div>
            </li>
            <li>
                <a asp-action="MyDeliveries" asp-controller="Clients"><i class="bi bi-truck"></i> Deliveries <span class="arrow">></span></a>
                <div class="dropdown-menu">
                    <ul>
                        <li><a asp-action="SearchDelivery" asp-controller="Clients"><i class="bi bi-binoculars"></i> Track</a></li>
                        <li><a asp-action="MyDeliveries" asp-controller="Clients"><i class="bi bi-search"></i> Search</a></li>
                        <li><a asp-action="DeliveryStatistics" asp-controller="Clients"><i class="bi bi-bar-chart"></i> Statistics</a></li>
                    </ul>
                </div>
            </li>
            <li>
                <a asp-action="MyInvoices" asp-controller="Clients"><i class="bi bi-receipt"></i> Invoices <span class="arrow">></span></a>
                <div class="dropdown-menu">
                    <ul>
                        <li><a asp-action="MyInvoices" asp-controller="Clients"><i class="bi bi-search"></i> Search</a></li>
                        <li><a asp-action="InvoicesStatistics" asp-controller="Clients"><i class="bi bi-bar-chart"></i> Statistics</a></li>
                    </ul>
                </div>
            </li>
        </ul>
    </aside>
    <div class="main-content">
        <div class="chart-container">
            <div class="cards-container">
                <div class="card" id="locationCard">
                    <div class="card-content">
                        <h3>Deliveries</h3>
                        <p><b>@Model.TotalDeliveries</b></p>
                    </div>
                </div>
                <div class="card" id="locationCard">
                    <div class="card-content">
                        <h3>Kilometers</h3>
                        <p><b>@Model.Kilometers KM</b></p>
                    </div>
                </div>
                <div class="card" id="locationCard">
                    <div class="card-content">
                        <h3>CO2 emissions</h3>
                        <p><b>@Model.CO2Emissions M3</b></p>
                    </div>
                </div>
                <div class="card" id="locationCard">
                    <div class="card-content">
                        <h3>Average distance</h3>
                        <p><b>@Model.AverageDeliveryDistance KM</b></p>
                    </div>
                </div>
                <div class="card" id="locationCard">
                    <div class="card-content">
                        <h3>Average delivery time</h3>
                        <p><b>@Model.AverageDeliveryTime hrs</b></p>
                    </div>
                </div>
            </div>

            <div class="first-row">
                <div class="chart-container">
					<h4>Delivery types ratio</h4>
                    <canvas id="deliveryChart" class="chart"></canvas>
                </div>
                <div class="chart-container">
                    <h4>Deliveries made on time</h4>
                    <div class="delay">
                    <canvas id="successRateChart" class="chart"></canvas>
                    <p style="color: #00aa87; width: 100px;" id="averageDelay" class="stat-text"></p>
                    </div>
                </div>
       
            </div>
                         
                <h4>Last year deliveries</h4>
                <canvas id="monthlyDeliveryChart" class="monthly-delivery-chart"></canvas>
            
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        async function fetchDeliveryCounts() {
            try {
                const response = await fetch('/Clients/GetDeliveryTypes');
                const data = await response.json();

                const domesticCount = data.domestic ?? 0;
                const internationalCount = data.international ?? 0;

                const ctx = document.getElementById('deliveryChart').getContext('2d');
                const deliveryChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: ['Domestic', 'International'],
                        datasets: [{
                            label: 'Deliveries',
                            data: [domesticCount, internationalCount],
                            backgroundColor: ['#00aa87', '#FF6384'],
                            hoverOffset: 4
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'bottom',
                            }
                        }
                    }
                });

            } catch (error) {
                console.error('Error fetching delivery counts:', error);
            }
        }
        async function fetchMonthlyDeliveries() {
            try {
                const response = await fetch('/Clients/GetDeliveryCounts');
                const data = await response.json();

                console.log('Fetched data:', data);

                const ctx = document.getElementById('monthlyDeliveryChart').getContext('2d');
                const monthlyDeliveryChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: data.months,
                        datasets: [{
                            label: 'Deliveries per Month',
                            data: data.deliveries,
                            backgroundColor: '#00aa87',
                            borderColor: '#00aa87',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    stepSize: 1
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: false
                            },
                            tooltip: {
                                callbacks: {
                                    label: function (tooltipItem) {
                                        return 'Deliveries: ' + tooltipItem.raw;
                                    }
                                }
                            }
                        }
                    }
                });
            } catch (error) {
                console.error('Error fetching monthly deliveries:', error);
            }
        }
        async function fetchDeliverySuccessRate() {
            try {
                const response = await fetch('/Clients/GetDeliveryTimes');
                const data = await response.json();

                const successRate = data.successRate || 0;
                const failureRate = 100 - successRate;
                const averageDelay = data.averageDelay || 0;

                const ctx = document.getElementById('successRateChart').getContext('2d');
                new Chart(ctx, {
                    type: 'radar',
                    data: {
                        labels: ['Success', 'Failure'], 
                        datasets: [{
                            label: 'Delivery Rates',
                            data: [successRate, failureRate],
                            backgroundColor: '#FF6384',
                            borderColor: '#FF6384',
                            borderWidth: 2
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: {
                            r: {
                                angleLines: {
                                    display: true
                                },
                                beginAtZero: true
                            }
                        },
                        plugins: {
                            legend: {
                                position: 'top',
                            }
                        }
                    }
                });

                document.getElementById('averageDelay').innerText =
                    `Average delay time: ${averageDelay.toFixed(2)} hrs`;

            } catch (error) {
                console.error('Error fetching delivery success rate:', error);
            }
        }
        window.onload = async function () {
            await fetchDeliverySuccessRate();
            await fetchMonthlyDeliveries();
            await fetchDeliveryCounts();
        };
    </script>
</body>

</html>


